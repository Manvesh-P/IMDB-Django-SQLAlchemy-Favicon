"""
Django settings for IMDBProject project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-urz_16$6+19qh80lozz4#w9(oq2v##1fg-5@w(4(he4k$c%m!3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',

#     # 'bossoidc', 
#     # 'djangooidc', 
#     'IMDBApp', 
#     # 'social_django'
# ]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 'bossoidc', 
    # 'djangooidc', 
    'IMDBApp', 
    'social_django'
]


# KEYCLOAK_OIDC_PROFILE_MODEL = 'django_keycloak.OpenIdConnectProfile'

# AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend', 
#                            'bossoidc.backend.OpenIdConnectBackend')

# AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend', 
#                            'bossoidc.backend.OpenIdConnectBackend')


AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2', 
    'django_keycloak.auth.backends.KeycloakAuthorizationCodeBackend',
)

# # auth_uri = 'http://127.0.0.1:8080/auth/realms/myrealm'
# # auth_uri = 'http://127.0.0.1:8080/realms/myrealm/protocol/openid-connect/auth'
# auth_uri = 'http://127.0.0.1:8080/realms/myrealm/protocol/'
# client_id = 'manvesh'
# public_uri = 'http://127.0.0.1:8000'

# from bossoidc.settings import *


# configure_oidc(auth_uri, client_id, public_uri)

# LOGIN_URL = 'http://127.0.0.1:8080/realms/myrealm/protocol/openid-connect/auth?client_id=manvesh&response_type=code&redirect_uri=http://127.0.0.1:8000/get_token/'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/myrealm/protocol/openid-connect/auth?client_id=manvesh&response_type=code&redirect_uri=http://127.0.0.1:8000/api/IMDBApp/get_token/'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/myrealm/protocol/openid-connect/auth?client_id=manvesh&response_type=code&redirect_uri=http://127.0.0.1:8000/'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/myrealm/protocol/openid-connect/auth?client_id=manvesh&response_type=code&redirect_uri=http://127.0.0.1:8000/api/IMDBApp/*'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/myrealm/protocol/openid-connect/auth?client_id=manvesh&response_type=code&redirect_uri=http://127.0.0.1:8000/'
# LOGIN_URL = 'https://127.0.0.1:8080/realms/myrealm/protocol/openid-connect/auth?client_id=manvesh&response_type=code&redirect_uri=http://127.0.0.1:8000/'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/tfai-ocr/protocol/openid-connect/auth?client_id=techforce-ocr-client&response_type=code&redirect_uri=http://127.0.0.1:8000/'

# LOGIN_REDIRECT_URL = ''   
LOGIN_URL = 'http://127.0.0.1:8080/realms/myrealm/protocol/openid-connect/auth?client_id=manvesh&response_type=code&redirect_uri=http://127.0.0.1:8000/api/IMDBApp/home/view/'


# LOGIN_URL = 'http://127.0.0.1:8080/realms/tfai-ocr/protocol/openid-connect/'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/tfai-ocr/protocol/openid-connect/auth/'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/tfai-ocr/protocol/openid-connect/auth?client_id=techforce-ocr-client'
# LOGIN_URL = 'http://127.0.0.1:8080/auth/realms/tfai-ocr/protocol/openid-connect/auth?client_id=techforce-ocr-client&response_mode=fragment&response_type=code&scope=openid'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/tfai-ocr/protocol/openid-connect/auth?client_id=techforce-ocr-client&response_mode=fragment&response_type=code&scope=openid'
# LOGIN_URL = 'http://127.0.0.1:8080/realms/tfai-ocr/protocol/openid-connect/auth?client_id=techforce-ocr-client&response_mode=fragment&response_type=code&scope=openid&redirect_uri=http://127.0.0.1:8000/*'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'IMDBProject.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [os.path.join(BASE_DIR, 'templates/'),],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',

#                 # 'social_django.context_processors.backends', 
#                 # 'social_django.context_processors.login_redirect'
#             ],
#         },
#     },
# ]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages', 

                'social_django.context_processors.backends', 
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'IMDBProject.wsgi.application'


KEYCLOAK_OIDC_PROFILE_MODEL = 'django_keycloak.OpenIdConnectProfile'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': str(BASE_DIR / 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static/'),]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
